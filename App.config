<?xml version="1.0" encoding="utf-8"?>
<!-- NOTE:  a shame; https://stackoverflow.com/questions/15132662/can-i-declare-and-use-dtd-entities-in-app-config
	<!DOCTYPE configuration [
		<!ENTITY MeasurementCustom "MeasurementCustom" >
		<!ENTITY MeasurementNumeric "MeasurementNumeric" >
		<!ENTITY MeasurementProcess "MeasurementProcess" >
		<!ENTITY MeasurementTextual "MeasurementTextual" >
		<!ENTITY NotApplicable "NotApplicable" >
	]>
 -->
<!-- NOTE:  https://stackoverflow.com/questions/5303476/how-to-fix-error-could-not-find-schema-information-for-the-attribute-element -->

<configuration>
	<configSections>
		<section name="TestOperationsSection" type="ABT.Test.Exec.AppConfig.TestOperationsSection, TestExec" />
		<section name="TestGroupsSection" type="ABT.Test.Exec.AppConfig.TestGroupsSection, TestExec" />
		<section name="TestMeasurementsSection" type="ABT.Test.Exec.AppConfig.TestMeasurementsSection, TestExec" />
    <section name="InstrumentsStationaryRequiredSection" type="ABT.Test.Exec.AppConfig.InstrumentsStationaryRequiredSection, TestExec" />
    <section name="InstrumentsPortableRequiredSection" type="ABT.Test.Exec.AppConfig.InstrumentsPortableRequiredSection, TestExec" />
  </configSections>
	<appSettings>
		<!-- NOTE:  All appSetting String values subjected to .Trim() method during import into TestExec. -->
		<!-- NOTE:  Standard TestExec Logger configuration settings, specific to the Logger sub-system. -->
		<add key="LOGGER_FileEnabled" value="true" />
		<!-- LOGGER_FileEnabled & LOGGER_SQLEnabled are independent of each other.
		<		- Can choose to Log to Rich Text only, SQL only, both Rich Text & SQL or neither, depending what the Customer requires. -->
		<add key="LOGGER_FilePath" value="P:\Test\TDR\LOGGER_FilePath\" />
		<!-- Rich Text Log Paths are only relevant if LOGGER_FileEnabled is true.
				- Windows file/folder permissions to create, read, write & search in LOGGER_FilePath are required.
				- Logging.FileStop() requires terminating "\" character. -->
    <add key="LOGGER_SQLEnabled" value="false" />
		<!-- LOGGER_FileEnabled & LOGGER_SQLEnabled are independent of each other.
				- Can choose to Log to Rich Text only, SQL only, both Rich Text & SQL or neither, depending what the Customer requires. -->
		<add key="LOGGER_SQLConnectionString" value="" />
		<!-- SQL connection string only relevant if LOGGER_SQLEnabled is true. -->
		<add key="LOGGER_TestEventsEnabled" value="true" />
		<!-- See https://github.com/Amphenol-Borisch-Technologies/TestEvents -->
		<!-- NOTE:  Standard TestExec UUT configuration settings, specific to the Unit Under Test. -->
    <add key="LOGGER_SerialNumberDialogEnabled" value="false" />
    <!-- LOGGER_SerialNumberDialogEnabled determines the input method for UUT Serial Numbers:
				- When LOGGER_SerialNumberDialogEnabled="true", class SerialNumberDialog exclusively handles Serial Number entry via Barcode Scanning of ABT's official Barcoded Serial Number.
          - This enforces correct scanning of Serial Numbers.
				- When LOGGER_SerialNumberDialogEnabled="false", an Interaction.InputBox exclusively prompts test operators to enter ABT Serial Number.
          - This permits manual hand-typed keyboard entry of Serial Numbers, with concommitant high rates of typographic errors.
        - SerialNumberDialog's Barcode Scanner is configured in TestExec.ConfigurationTestExec file. -->
    <add key="UUT_SerialNumberRegExCustom" value="NotApplicable" />
    <!-- NOTE:  TestExec.ConfigurationTestExec file contains global Regular Expression SerialNumberRegExDefault global Regular Expression SerialNumberRegExDefault can be locally
         overridden by a TestPlan's App.config's UUT_SerialNumberRegExCustom key/value pair, if desired.
         - As Customers sometimes require Serial Number formats that differ from ABT's (or even formats that differ across a Customer's UUTs)
           global SerialNumberRegExDefault can be overridden by custom local UUT_SerialNumberRegExCustom.
         - When not explicitly overridden by an App.config's UUT_SerialNumberRegExCustom, TestExecConfigurationTestExec SerialNumberRegExDefault is applied instead as the default.
         
         NOTE:  ABT's official Serial Number format is "01BB2-#####", where each "#" is an is an integer in the set {0..9}.
         - However, some Customers prefer other formats:
           - I'm no Regular Expression expert, and below formats are untested, but hopefully they'll work.
						 - Regular Expression ^ABT[0-9]{4}$ hopefully enforces format "ABT####".
						 - Regular Expression ^BRH[0-9]{2}(([0-4][0-9])|([5][0-2]))-[0-9]{3}$ hopefully enforces format "BRHYYWW-###" where YY are the last 2 digits of the year, and WW are the calender week, 01 through 52.
							 - Regular Expression  ^[0-9]{2}(([0-4][0-9])|([5][0-2]))-[0-9]{3}$ hopefully enforces format "YYWW-###".
						 - Regular Expression ^[0-9]{4}$ hopefully enforces format "####" where each "#" is an is an integer in the set {0..9}, and there must be exactly 4.
							 - Change {4} to any number to enforce that many digits.
							 - So, {3} should enforce format "###" and {5} should enforce "#####". -->
    <add key="UUT_Customer" value="UUT_Customer" />
		<add key="UUT_Type" value="UUT_Type" />
		<!-- Recommended choices: { System, Unit, Sub-Unit, CCA, Harness, Component }. -->
		<add key="UUT_Number" value="UUT_Number" />
		<add key="UUT_Revision" value="UUT_Revision" />
		<add key="UUT_Description" value="UUT_Description" />
		<add key="UUT_TestSpecification" value="UUT_TestSpecification" />
    <!-- - Provides convenient access to supplementary UUT or test documents that may be helpful when operating the test.
				 - Examples are UUT test procedures, schematics, drawings, BOMs, work instructions, troubleshooting notes, etc. -->
    <add key="UUT_DocumentationFolder" value="P:\Test\Workspace\eDocs\1\UUT_DocumentationFolder" />
    <add key="UUT_ManualsFolder" value="P:\Test\Engineers\Equipment Manuals\TestExecutive\UUT_ManualsFolder" />
    <add key="UUT_TestEngineerEmail" value="NotApplicable" />
    <!-- Enter either a valid E-Mail address or NotApplicable. -->
    <add key="UUT_Simulate" value="False" />
    <!-- NOTE:  Must use bool.TrueString & bool.FalseString, which are True & False respectively.
			   - https://learn.microsoft.com/en-us/dotnet/api/system.boolean.parse?view=netframework-4.8
				 
         NOTE:  Must have Instrumentation in order to utilize it:
				 - Set UUT_Simulate = False if have requisite Instrumentation & intend to use it.
           - That is, production testing of UUTs.  This is the normal, default state.
         - Set UUT_Simulate = True if haven't or needn't utilize Instrumentation.
			 	   - This is useful when developing/testing TestExec/TestPlan, especially on a desktop PC workstation, as versus a production test station.
             - Can verify TestExec.config.xml's Apps & Folders element paths are all correct.
             - More significantly, can also verify below TestOperations/TestGroups/TestMeasurement entries are correct.
               - A fair amount of validation occurs after selecting TestOperations/TestGroups with TestExec's "Select Tests" button.
               - This validation of correct TestOperations/TestGroups/TestMeasurement entries can be completed without Instrumentation.
               - Think of it like a compiler checking your code; it won't find logic errors, but will find syntax errors.
             - Lastly, you can code & debug your TestOperations/TestMeasurement methods, including all Debug.Asserts.  Simply exclude or comment method invocations to SCPI VISA Instruments.
		-->
		<add key="ClientSettingsProvider.ServiceUri" value="" />
	</appSettings>
	<TestOperationsSection>
		<!--
		NOTE:  TestOperations are explicit customer test requirements:
			- They will typically be ERP/MRP routing/traveler operations that must be documented as completing.
			- They are the topmost tier of test operations TestExec/TestPlan support.
			- All TestOperations must reference 1 or more TestGroupIDs.
			- Any TestOperations may reference identical TestGroupIDs.
				- For example, if there is a standard PowerUp TestGroupID, multiple TestOperations may reference it.
		NOTE:  *IMPORTANT*
			- Sequences of TestMeasurements executed by TestExec/TestPlan cannot contain duplicate TestMeasurementIDs.
				- This is because each TestMeasurementID is transformed into an AppConfigTests.Test class object,
				  which contains writeable Measurement.Value & Measurement.TestEvent properties.
				- Duplicating TestMeasurementIDs doesn't result in duplicating AppConfigTests.Test class objects, as each must have unique IDs.
				- Instead TestExec/TestPlan would simply overwrite the single Measurement objects corresponding to a duplicated TestMeasurementIDs.
			- Thus, Test Developers must assiduously arrange all TestOperations and TestGroups so they cannot aggregate into sequences
			  containing duplicate TestMeasurementIDs.
				- If you need to repeat a TestMeasurement, duplicate all its fields into a new TestMeasurementID, assigned to a different, unique ID.
				- This generates a unique AppConfigTests.Measurement class object, with its own Value & TestEvent properties, which won't be overwritten.
				- To visually & logically correlate duplicated TestMeasurementIDs, name them identically and suffix them alpha/numerically:
					- TM01_1, TM01_2, TM01_3...
						- Or TM01_a, TM01_b, TM01_c...
					- Shorts_10Ω_1, Shorts_10Ω_2, Shorts_10Ω_3...
						- Or Shorts_10Ω_a, Shorts_10Ω_b, Shorts_10Ω_c...
			- All App.config TestMeasurements require dedicated, one-to-one correlated TestPlan methods:
				- However, all TestPlan methods can invoke other TestPlan methods.
					- Either utility methods common to multiple TestMeasurement methods, or other TestMeasurement methods.
				- Example; App.config TestMeasurementIDs TM01, TM02 & TM03 all contain an identical measurement.
					- Create corresponding TestPlan methods named TM01, TM02 & TM03.
					- Code method TM01 to apply the stimuli of TM01 and return its measurement.
						- TM02 & TM03 identically duplicate TM01's stimuli & measurement.
						- So code methods TM02 & TM03 to simply invoke method T01, thus no code is duplicated.
	
	ID:				Required field.
					- Unique Identifier; no 2 can be identical, as ID is unique key in a Dictionary object.
					- Suggest T-10, T-20, T-30... ABT FilePro Traveler Test Operations.
					- *Must* also be a valid Windows folder name; see https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#file-and-directory-names.
	Revision:		Required field.
					- Revision of the TestOperation element.
					- Increment whenever any field in a TestOperation element changes; particularly when TestGroupIDs are added or removed.
					- Add a comment to the TestOperation element for each revision increment detailing modifications, providing revision history
					- Essentially TestOperations are customer test requirements, hence Revision is a required field.
	Description:	Required field.
					- Concise description of Group:
						- "PowerUp +28V, +5 & +3.3"
	TestGroupIDs:	Required field.
					- No duplicate TestGroupIDs allowed.
					- 1 or more TestGroupIDs, separated by '|'.
					- TestGroups execute in *entry order*:
						- Entry "TG3|TG1|TG2" executed in sequence (TG3, TG1, TG2).
						- Entry "TG1|TG2|TG3" executed in sequence (TG1, TG2, TG3).
						- Entry "TG2|TG3|TG1" executed in sequence (TG2, TG3, TG1).
		
		NOTE:  All TestOperations String values subjected to .Trim() method during import.
     -->
		<TestOperations>
      <!-- TestOperations directly & explicitly implementing FilePro Traveler test operations.  For production testing of CCAs. -->
			<TestOperation ID="T-20" Revision="1.0" Description="FilePro T-20 Programming." TestGroupIDs="Programming" />
      <TestOperation ID="T-30" Revision="1.0" Description="FilePro T-30 Functional Test." TestGroupIDs="4.2|4.4.1|4.4.2|4.5|4.6|4.7|4.8|4.9|4.10" />
      <!-- Revisions 1.0 are initial releases. -->
		</TestOperations>
	</TestOperationsSection>
	<TestGroupsSection>
		<!--
		TestGroup syntax is identical to TestOperations, except TestGroup IDs are replaced with TestMeasurement IDs. 
			- TestGroups function differently from TestOperations though:
				- TestGroups aren't explicit customer test requirements:
					- They may often be sub-sets of explicit TestOperation customer test requirements, but they needn't be.
						- For such, there will be 1 or more TestOperations that reference them.
					- They can also be custom TestMeasurement sets useful for troubleshooting UUTs failing production testing.
					- Or custom TestMeasurement sets useful for developing/debugging new TestPlan programs.
						- For these such, there may be no TestOperations that reference them.
				- They are the middle tier of test operations TestPlan supports.
				- All TestGroups must reference 1 or more TestMeasurementIDs.
				- Any TestGroups may be referenced by 0 or more TestOperations.
	
	Selectable:		Required field.
						- Boolean true/false.
							- Prevents test operator from selecting/executing TestGroups that require pre-conditions; power supplies presence/absence, UUT programming, UUT calibration, UUT state, etc.
							- Used in 'SelectTests' Form, 'ListSelections' ListView Control when 'radioButtonTestGroups' RadioButton is selected:
								- true causes TestGroup to be available for selection/execution in 'ListSelections'.
								- false causes TestGroup to unavailable for selection/execution in 'ListSelections'.
							- TestGroups that must be preceded and/or succeeded by other TestGroup execution must have their Selectable field set false.
								- They will not appear in 'ListSelections' and cannot be independently executed.
							- TestGroups that can be executed independently of all other TestGroups can have their Selectable field set to true or false, as desired.
								- They can appear in 'ListSelections' and can be independently executable as desired.
	CancelNotPassed:	Required field.
						- Boolean true/false to cancel subsequent TestExec.MeasurementsRun() testing if any TestMeasurementID don't pass.
							- That is, if a TestGroup TG1's TestMeasurementIDs are "TM1|TM2|TM3":
								- If TG1's CancelNotPassed = true.
									- And TM1's CancelNotPassed = TM2's CancelNotPassed = TM3's CancelNotPassed = false.
									- TestPlan will sequentially execute TM1, then TM2 & finally TM3.
									- TestPlan will cancel after TM3 if any of TM1, TM2 or TM3 don't pass.
									- TestPlan won't cancel after TM3 only if TM1, TM2 & TM3 all pass.
								- If TG1's CancelNotPassed = false, then TestPlan won't cancel, even if TM1, TM2 & TM3 all fail.
						- Note that TestMeasurement's CancelNotPassed always takes precedence:
							- That is, if a TestGroup TG1's TestMeasurementIDs are "TM1|TM2|TM3":
								- If TG1's CancelNotPassed = false.
									- And TM1's CancelNotPassed = TM2's CancelNotPassed = TM3's CancelNotPassed = true.
									- TestPlan will cancel immediately if any TM doesn't pass..
									- If TM1 passes, TestPlan will cancel immediately if TM2 doesn't.
									- If TM1 & TM2 pass, TestPlan will cancel immediately if TM3 doesn't.
									- TestPlan will only not cancel if TM1, TM2 & TM3 all pass.
	TestMeasurementIDs:	Required field.
						- No duplicate TestMeasurementIDs allowed.
						- 1 or more TestMeasurementIDs, separated by '|'.
						- TestMeasurementIDs execute in *entry order*:
							- Entry "TM3|TM1|TM2" executed in sequence (TM3, TM1, TM2).
							- Entry "TM1|TM2|TM3" executed in sequence (TM1, TM2, TM3).
							- Entry "TM2|TM3|TM1" executed in sequence (TM2, TM3, TM1).
		NOTE:  All TestGroup String values except TestMeasurementIDs subjected to .Trim() method during import.
		NOTE:  TestMeasurementIDs are subjected to Regex.Replace(((String)base["TestMeasurementIDs"]), @"\s+", "") during import,
          removing all whitespace (tabs, newlines, spaces, et cetera) because TestMeasurementIDs must be valid C# identifiers.
-->
		<TestGroups>
      <!-- TestGroups referenced from TestOperations implementing FilePro Traveler test operations.  For production testing of UUT CCAs. -->
			<TestGroup ID="Programming" Revision="1.0" Description="Programming." Selectable="true" CancelNotPassed="true" TestMeasurementIDs="TM_00_00" />
			<TestGroup ID="4.2" Revision="1.0" Description="Preliminary Electrical Test." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_01_00" />
      <TestGroup ID="4.4.1" Revision="1.0" Description="UUT Remote Update Firmware Operation." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_02_00" />
      <TestGroup ID="4.4.2" Revision="1.0" Description="Program MAC Addresses." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_03_00|TM_03_01" />
      <TestGroup ID="4.5" Revision="1.0" Description="IIU Test." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_04_00|TM_04_01|TM_04_02|TM_04_03|TM_04_04|TM_04_05|TM_04_06|TM_04_07" />
      <TestGroup ID="4.6" Revision="1.0" Description="UUT Test Command." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_05_00|TM_05_01|TM_05_02|TM_05_03|TM_05_04|TM_05_05|TM_05_06|TM_05_07|TM_05_08|                  TM_05_09|TM_05_10|TM_05_11|TM_05_12|TM_05_13|TM_05_14|TM_05_15|TM_05_16|TM_05_17|TM_05_18|TM_05_19|TM_05_20|TM_05_21|TM_05_22|TM_05_23|TM_05_24|TM_05_25|TM_05_26|TM_05_27|TM_05_28|TM_05_29|TM_05_30|TM_05_31|TM_05_32|TM_05_33|                  TM_05_34|TM_05_35|TM_05_36|TM_05_37|TM_05_38|TM_05_39|TM_05_40|TM_05_41|TM_05_42|TM_05_43|TM_05_44|TM_05_45|TM_05_46|TM_05_47|TM_05_48|TM_05_49|TM_05_50|TM_05_51|TM_05_52|TM_05_53|TM_05_54|TM_05_55|TM_05_56|TM_05_57|TM_05_58|                  TM_05_59|TM_05_60|TM_05_61|TM_05_62|TM_05_63|TM_05_64|TM_05_65|TM_05_66|TM_05_67|TM_05_68|TM_05_69|TM_05_70|TM_05_71|TM_05_72|TM_05_73|TM_05_74|TM_05_75|TM_05_76|TM_05_77|TM_05_78|TM_05_79|TM_05_80|TM_05_81|TM_05_82|TM_05_83|                  TM_05_84|TM_05_85|TM_05_86|TM_05_87|TM_05_88|TM_05_89|TM_05_90|TM_05_91|TM_05_92|TM_05_93|TM_05_94|TM_05_95|TM_05_96|TM_05_97|TM_05_98|TM_05_99" />
      <TestGroup ID="4.7" Revision="1.0" Description="CPOW Test." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_06_00|TM_06_01|TM_06_02|TM_06_03|TM_06_04|TM_06_05|TM_06_06|TM_06_07|TM_06_08" />
      <TestGroup ID="4.8" Revision="1.0" Description="UUT Memory Write32 Command." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_07_00|TM_07_01|TM_07_02|TM_07_03" />
      <TestGroup ID="4.9" Revision="1.0" Description="UUT Ambient Temperature Command." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_08_00|TM_08_01" />
      <TestGroup ID="4.10" Revision="1.0" Description="UUT Remote Update Firmware Operation." Selectable="false" CancelNotPassed="true" TestMeasurementIDs="TM_09_00" />

      <!-- TestGroups not referenced from TestOperations of FilePro Traveler test operations.  Exclusively for debugging UUT app and/or UUT CCAs. -->

      <!-- Unused TestGroups; effectively commented, retained for potential future use.  -->

      <!-- &amp; is the '&' character in XML format. -->
			<!-- Revisions 1.0 are initial releases. -->
		</TestGroups>
	</TestGroupsSection>
	<TestMeasurementsSection>
		<!--
		TestMeasurement syntax differs from TestOperations & TestGroups, having additional/different fields.
			- TestMeasurements are the bottom tier of test operations TestPlan supports.
			- Each TestMeasurement ID represents a discrete operation, that literally directly corresponds to an identically named method.
			- All TestMeasurements "must" be referenced by 1 or more TestGroups.
				- Cavaet; if not referenced by TestGroup(s), TestMeasurements are simply dormant/inactive, inaccesible/uninvocable by TestExec.
			- Any TestMeasurements may be referenced by 2 or more TestGroups.

	ID:					Required field.
						- Unique Identifier; no 2 can be identical, as ID is unique key in a Dictionary object.
						- T01, T02, T03...
						- *Must* also be a valid C# identifier; see 
						  https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/identifier-names.
						- Recommend alpha-numerically ordering to avoid duplications, which throw Exceptions.
						- Can be ordered as desired though; test execution order
						  *solely* determined by first TestGroupIDs & second by TestMeasurementIDs ordering.
						- Cannot contain '|' character.
							- Using character '|' to separate TestGroupIDs & TestMeasurementIDs.
							- Thus TestMeasurement IDs cannot contain character '|' in them.
							- ID="T01 valid.
							- ID="T|1" invalid.
	Description:		Required field.
						- Concise description of Test; "Apply/measure +5V DC Input Voltage pre-programming."
	Revision:			Required field.
						- Revision of the TestMeasurement.
						- Increment whenever any field in its TestMeasurement changes.
							- Typically will be set to "1.0" at initial release & left unchanged thereafter.
							- For most Customers & UUTs, this fine-grained revisioning will be annoying, unnecessary overhead.
							- For some Customers or UUTs, however, it might be useful or even required.
						- Add a comment to the TestMeasurement for each revision increment detailing modifications, providing revision history
						- TestMeasurements are customer test requirements, hence Revision is a required field.
						- Revisions 1.0 are initial releases.
	ClassName:			Required field.
						- Class name to use to create & store below Test arguments.
							- Current options are 'MeasurementCustom', 'MeasurementNumeric', 'MeasurementProcess' or 'MeasurementTextual'.
							- MeasurementCustom for completely custom measurements.
							- MeasurementNumeric is for standard measurements with Low & High limits:
								- Current, Resistance, Voltage, etc.
							- MeasurementProcess is for external process operations.
								- A typical external process operation is In-System Programming, typically including:
									- Blank Check.
									- Erase.
									- Program.
									- Verify program.
									- Device & Manufacturer ID codes.
									- CRC calculations.
							- MeasurementTextual is to check textual values:
								- User input.
								- Text read from IC memories.
								- Text read from files.
								- Text read form networked devices.
								- CRC calculations that don't utilize ISP MeasurementProcesses.
	CancelNotPassed:	Required field.
						- Boolean true/false to cancel subsequent TestExec.MeasurementsRun() testing if any TestMeasurement doesn't pass.
						- Do not pass Go, do not collect $200, go directly to TestExec.MeasurementsPostRun().
	Arguments:			Required field.
						IMPORTANT:
						- All Key-Value Pairs are required in all Arguments.
						- All Keys in all Arguments are case-sensitive.
						- No Values in any Arguments are case-sensitive.
							- Example, for MeasurementNumeric Keys:
								- high ≠ HIGH ≠ High.  Only High is correct.
								- low ≠ LOW ≠ Low.  Only Low is correct.
								- units_si ≠ units_SI ≠ Units_si ≠ Units_SI. Only Units_SI is correct.
						- Key-Value Pairs separated by '|' character.
							- Key-Value Pairs are themselves separated by '=' character.
						- MeasurementNumeric Key-Value Pairs:
							- Example: Arguments="High=0.0055|Low=0.0035|Units_SI=A|Units_SI_Modifier=DC".
							- High
								- Required sub-field.
									-Enter '∞' for no High limit.
								- Test's high limit; example "High=5.25", for a 5.0VDC power supply with +5% tolerance.
								- Parsed as Double.TryParse(High, NumberStyles.Float, CultureInfo.CurrentCulture, out dMeasurement);
								- https://learn.microsoft.com/en-us/dotnet/api/system.double.tryparse?view=net-7.0#system-double-tryparse(system-string-system-globalization-numberstyles-system-iformatprovider-system-double
								- https://learn.microsoft.com/en-us/dotnet/api/system.globalization.numberstyles?view=net-7.0#system-globalization-numberstyles-float
								- NOTE:  TestPlan.MeasurementArgumentsAre() returns High & Low values in Microsoft's General Format Specifier (G).
								        - Debug.Assert(TestPlan.MeasurementArgumentsAre()) formatted as other than G will fail.
										- Reformat to Microsoft G to pass Debug.Assert(TestPlan.MeasurementArgumentsAre())s.
										- https://learn.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings#GFormatString
								- Scientific Notation permitted & encouraged.
									- 1.0E5 is valid instead of 100000.
									- 1.5E-5 is valid instead of 0.000015.
									- Postive/Negative +/- signs allowed in both exponent & significand:
									+1.0E+5 is valid for +100000.0.
										- Recommend 1.0E5 though.
									-1.0E5 is valid for -1000000.
									1.5E-5 is valid for 0.000015.
									-1.5E-5 is valid for -0.000015.
								- Int32 & Double both allowed:
									- 100000 & 100000.0 both valid.
								- Commas not allowed:
									- 100000 & 1000000 both valid.
									- 100,000 & 1,000,000 both invalid.
									- Recommend 1E5 and 1E6 instead.
	
								- NOTE:  Do not use Metric prefixes:
									- That is, do not use micro, milli, kilo, mega, etc.
									  or their μ, m, k, M, etc. symbols either.
									- Instead, always normalize Low & High to
									  unitary Units_SI without prefixes.
									- 10000 is valid.
									- 10 kilo or 10 k or 10k invalid.
									- Recommend Scientific Notation when applicable.
							- Low
								- Required sub-field.
									- Enter '-∞' for no Low limit.
								- Test's low limit; example "Low=4.75", for a 5.0VDC power supply with -5% tolerance.
								- Parsed identically as High.
							- Units_SI
								- Required sub-field from set { "amperes", "celcius", "farads", "henries", "hertz", "NotApplicable", "ohms", "seconds", "siemens", "volt_amperes", "volts", "watts" }.
								- Above set values are not case-sensitive.
								- System International Base & Derived Units:
									https://en.wikipedia.org/wiki/SI_base_unit
									https://en.wikipedia.org/wiki/SI_derived_unit
								- Enter "NotApplicable" when Units_SI aren't applicable:
								- NOTE:  Units_SI are purely cosmetic in function; they aren't used
									to calculate Test PASS/FAIL TestEvents as Low & High are,
									only for reporting what Units_SI their Test's measured values are in.
							- Units_SI_Modifier
								- Required sub-field from set { "AC", "DC", "NotApplicable", "Peak", "PP", "RMS" }
								- Above set values are not case-sensitive.
								- "AC", "DC", "NotApplicable", "Peak", "PP", "RMS" respectively for Alternating Current,
									Direct Current, NotApplicable, Peak, Peak-to-Peak, Root-Mean-Squared.
								- Enter "NotApplicable" when Units_SI_Modifier not applicable.
								- NOTE:  Units_SI_Modifier are purely cosmetic in function; they aren't used
									to calculate measurement PASS/FAIL TestEvents as Low & High are, only for reporting
									metadata about the Units_SI the Measurements values are in.
						- MeasurementProcess Key-Value Pairs:
							- ISP Example:	Arguments="ProcessFolder=C:\Program Files\Microchip\MPLABX\v6.15\mplab_platform\mplab_ipe\|
											ProcessExecutable=ipecmd.exe|
											ProcessArguments=-pv C:\Firmware\boot.hex|
											ProcessExpected=0x9B7E" />"
							- ProcessFolder
								- Required sub-field.
								- Valid Folder path containing ProcessExecutable executable.
								- Path must end with '\' character because the ProcessExecutable will be appended to ProcessFolder to make a valid executable path.
							- ProcessExecutable
								- Required sub-field.
								- Valid name of executable file, relative to folder ProcessFolder.
							- ProcessArguments
								- Required sub-field.
								- Command-line arguments passed to ProcessExecutable executable when invoked.
							- ProcessExpected
								- Required sub-field.
								- Examples:
									- Expected CRC value.
									- Standard Output from a ProcessExcutable ISP operation; "Verification passed".
									- Standard Error result from ProcessExecutable operation; pass=0=, fail≠0.
						- MeasurementTextual Key-Value Pairs:
							- 1 Key-Value Pair.
							- Text
								- Required sub-field.
								- Arguments="Text=The quick brown fox jumps over the lazy dog."
						- MeasurementCustom Arguments:
							- If desired, 1 to N Key-Value Pairs:
								- Arguments="Key1=Value1"
								- Arguments="Key1=Value1|Key2=Value2"
								- Arguments="Key1=Value1|Key2=Value2|....KeyN=ValueN"
							- If undesired:
								- Arguments="NotApplicable".

		More on required Low & High sub-fields:
		Invalid Measurements:
			- Low won't parse to Double.
				- Enter '-∞' for no Low limit.
			- High won't parse to Double.
				- Enter '∞' for no High limit.
			- Low & High both parse to Double, but Low > High.

		Valid Measurements:
			- Low & High both parse to Double and Low ≤ High:
				- Typical low & high limits, an inclusive range of numeric measurements that will pass..
				- Special case of Low = High acceptable but *not recommended* due to
				  System.Double roundoff/truncation & instrument measurement inaccuracies.
				- Most (all) real-world measurements require non-zero tolerances.
		NOTE:  All TestMeasurement String values except IDs subjected to .Trim() method during import.
		NOTE:  IDs are subjected to Regex.Replace(((String)base["ID"]), @"\s+", "") during import,
          removing all whitespace (tabs, newlines, spaces, et cetera) because IDs must be valid C# identifiers.
-->
		<TestMeasurements>
      <!-- TestMeasurements not referenced from TestOperations.  Exclusively for debugging UUT app and/or UUT CCAs.-->
      <!-- TestMeasurements referenced from TestOperations via TestGroups.  For production testing of UUT CCAs.-->
      <TestMeasurement ID="TM_00_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_01_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_02_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_03_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_03_01" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_01" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_02" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_03" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_04" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_05" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_06" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_04_07" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_01" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_02" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_03" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_04" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_05" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_06" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_07" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_08" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_09" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_10" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_11" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_12" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_13" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_14" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_15" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_16" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_17" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_18" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_19" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_20" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_21" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_22" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_23" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_24" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_25" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_26" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_27" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_28" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_29" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_30" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_31" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_32" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_33" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_34" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_35" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_36" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_37" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_38" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_39" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_40" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_41" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_42" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_43" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_44" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_45" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_46" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_47" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_48" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_49" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_50" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_51" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_52" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_53" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_54" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_55" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_56" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_57" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_58" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_59" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_60" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_61" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_62" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_63" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_64" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_65" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_66" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_67" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_68" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_69" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_70" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_71" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_72" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_73" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_74" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_75" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_76" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_77" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_78" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_79" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_80" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_81" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_82" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_83" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_84" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_85" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_86" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_87" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_88" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_89" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_90" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_91" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_92" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_93" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_94" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_95" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_96" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_97" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_98" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_05_99" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_01" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_02" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_03" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_04" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_05" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_06" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_07" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_06_08" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_07_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_07_01" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_07_02" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_07_03" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_08_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_08_01" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <TestMeasurement ID="TM_09_00" Revision="1.0" Description="Description." ClassName="MeasurementCustom" CancelNotPassed="true" Arguments="NotApplicable" />
      <!-- Revisions 1.0 are initial releases. -->
		</TestMeasurements>
	</TestMeasurementsSection>

  <InstrumentsStationaryRequiredSection>
    <!-- InstrumentsStationaryRequired are instruments necessary to execute this test, and part of a 
				 test system's set of standard, stationary instruments always available.

				 - Stationary instruments are typically frequently used, and/or inexpen$ive, so are 
					 permanently installed into a test system.
       
				 - Only include stationary instruments that are used by & necessary to this test:
					 - Exclude unnecessary/unused stationary instruments, so they won't be required to execute this test, despite being unused.
					 - Excluding unnecessary/unused stationary instruments minimizes resources and mazimizes production flexibility.

				ID:					Required field, must be present in ABT.Test.Exec.TestExec.ConfigurationTestExec's InstrumentsStationary section.
										- Unique Identifier; no 2 can be identical; don't want 2 instances of the same instrument driver object.
				ClassName:  Required element.
										- Class name from ABT.Test.Lib.InstrumentDrivers.*
										- This is the instrument driver, typically inherited from a manufacturer provided SCPI or IVI driver.
										- The inheritance permits adding custom methods and interfaces, most quite simple, but useful.
                    - Note that instruments may have multiple drivers; SCPI, IVI-C, IVI-COM & IVI.Net are common Keysight provided drivers.
                      - SCPI drivers are likely more familiar, being very similar to native SCPI, but IVI drivers be advantageous.
                      - Regardless which, TestPlan developers should utilize their preferred instrument driver.
                      - If absent from TestExec's ABT.Test.Lib.InstrumentDrivers.*, can utilize preferred drivers 
                        as InstrumentPortableRequired, with driver being installed locally with the TestPlan.
                        - Consider adding to TestExec's ABT.Test.Lib.InstrumentDrivers.* when convenient.

				NOTE:  All InstrumentStationaryRequired String values subjected to .Trim() method during import.
-->
    <InstrumentsStationaryRequired>
			<InstrumentStationaryRequired ID="MM1_34401A" ClassName="MM_34401A_SCPI" />
			<InstrumentStationaryRequired ID="MF1_34980A" ClassName="MF_34980A_SCPI" />
			<InstrumentStationaryRequired ID="PS1ε2_E3649A" ClassName="PS_E3649A_SCPI" />
			<InstrumentStationaryRequired ID="PS3_E3634A" ClassName="PS_E3634A_SCPI" />
			<InstrumentStationaryRequired ID="WG1ε2_3162" ClassName="SCPI99" />
			<InstrumentStationaryRequired ID="MSO1_3014" ClassName="MSO_3014_IVI_COM" />
		</InstrumentsStationaryRequired>
	</InstrumentsStationaryRequiredSection>

	<InstrumentsPortableRequiredSection>
		<!-- InstrumentsPortableRequired are necessary to execute this test, but are non-standard, mobile instruments
				 moved from system to system as needed.
       
				 - Portable instruments are typically infrequently used, and/or expen$ive, so aren't permanently
					 installed into a test system.
       
				 - Only include portable instruments that are used by & necessary to this test:
					 - Exclude unnecessary/unused portable instruments, so they won't be required to execute this test, despite being unused.
					 - Excluding unnecessary/unused portable instruments minimizes resources and mazimizes production flexibility.
           
				ID:	      Required field.
									- Unique Identifier; no 2 can be identical, as ID is unique key in a Dictionary object.
				Detail:	  Required element.
									- Concise description of Instrument.
									- Recommend convention of Manufacturer, Model, Input/Output quantity if applicable, and Instrument type.
										- Keysight E36103B Single Output DC Power Supply
										- Keysight E36234A Dual Output DC Power Supply
										- Keysight 34461A Multi-Meter
				Address:   Required element.
									- Address elements must also all be unique, no duplicates.
									- They must also be valid VISA instrument addresses.
									- VISA instrument addresses are easily determined using Keysight's Connection Expert app
										- https://www.keysight.com/us/en/assets/7018-03222/data-sheets/5990-9362.pdf.
										- Example VISA address for USB instrument: USB0::0x2A8D::0x1602::MY61001983::0::INSTR.
				ClassName:  Required element.
										- Class name from ABT.Test.Lib.InstrumentDrivers.* or from TestPlan's instrument drivers.
										- This is the instrument driver, typically inherited from a manufacturer provided SCPI or IVI driver.
										- The inheritance permits adding custom methods and interfaces, most quite simple, but useful.
                    - Note that instruments may have multiple drivers; SCPI, IVI-C, IVI-COM & IVI.Net are common Keysight provided drivers.
                      - SCPI drivers are likely more familiar, being very similar to native SCPI, but IVI drivers be advantageous.
                      - Regardless which, TestPlan developers should utilize their preferred instrument driver.
                      - If absent from TestExec's ABT.Test.Lib.InstrumentDrivers.*, can utilize preferred drivers 
                        as InstrumentPortableRequired, with driver being installed locally with the TestPlan.
                        - Consider adding to TestExec's ABT.Test.Lib.InstrumentDrivers.* when convenient.
	
				NOTE:  VISA addresses (AKA VISA Resource Names) are explained at:
				- https://www.ni.com/docs/en-US/bundle/labview/page/lvinstio/visa_resource_name_generic.html.
				- https://www.ivifoundation.org/downloads/Architecture%20Specifications/vpp43_2022-05-19.pdf.
					
        NOTE:  All InstrumentsPortableRequired String values subjected to .Trim() method during import.
-->
    <InstrumentsPortableRequired>
			<InstrumentPortableRequired ID="PS4ε5_E3649A" Detail="Agilent E3649A Dual Output DC Power Supply" Address="GPIB0::5::INSTR" ClassName="PS_E3649A_SCPI" />
			<InstrumentPortableRequired ID="PS6_E3634A" Detail="Keysight E3634A Single Ouput Dual Range DC Power Supply" Address="GPIB0::6::INSTR" ClassName="PS_E3634A_SCPI" />
			</InstrumentsPortableRequired>
	</InstrumentsPortableRequiredSection>
    
  <runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Abstractions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Identity.Client" publicKeyToken="0a613f4dd989e8ae" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.48.1.0" newVersion="4.48.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.1.2" newVersion="4.0.1.2" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Text.Encodings.Web" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Text.Json" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.1" newVersion="7.0.0.1" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Azure.Core" publicKeyToken="92742159e12e44c8" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.26.0.0" newVersion="1.26.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Azure.Identity" publicKeyToken="92742159e12e44c8" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.8.0.0" newVersion="1.8.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Protocols.OpenIdConnect" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Protocols" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Tokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.JsonWebTokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.1.0" newVersion="6.25.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Extensions.Configuration.Abstractions" publicKeyToken="adb9793829ddae60" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Extensions.Configuration.Binder" publicKeyToken="adb9793829ddae60" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.1" newVersion="7.0.0.1" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Memory.Data" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Identity.Client.Extensions.Msal" publicKeyToken="0a613f4dd989e8ae" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-2.25.0.0" newVersion="2.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Security.Cryptography.ProtectedData" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="NuGet.Frameworks" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.11.3.1" newVersion="5.11.3.1" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Ivi.Driver" publicKeyToken="a128c98f1d7717c1" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.5.0.0" newVersion="1.5.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
</configuration>
